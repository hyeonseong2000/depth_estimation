from mpl_toolkits.mplot3d import Axes3D
import matplotlib.pyplot as plt
from matplotlib import cm
import matplotlib as mpl
import numpy as np
import math
import csv

def main():
        
    # exps_load = []
    # mants_load = []
    # rmses_load = []
    # deltas_load = []
    with open("./results/results_act_weight_fxp_.csv",'r',newline='') as f:
        reader = csv.reader(f)
        for i,line in enumerate(reader):
            if (i == 0):
                exps_load = line
            elif i==1 :
                mants_load = line
            elif i==2 :
                rmses_load = line
            elif i==3 :
                deltas_load = line
    
    exps_load = [float(item) for item in exps_load]
    mants_load = [float(item) for item in mants_load]
    rmses_load = [float(item) for item in rmses_load]
    deltas_load = [float(item) for item in deltas_load]

    # exps_load = [1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,2,2,2,2,2,2,2,2,2,2,2,2,2,2,3,3,3,3,3,3,3,3,3,3,3,3,3,4,4,4,4,4,4,4,4,4,4,4,4,5,5,5,5,5,5,5,5,5,5,5,6,6,6,6,6,6,6,6,6,6,7,7,7,7,7,7,7,7,7,8,8,8,8,8,8,8,8]
    # mants_load = [1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,1,2,3,4,5,6,7,8,9,10,11,12,13,14,1,2,3,4,5,6,7,8,9,10,11,12,13,1,2,3,4,5,6,7,8,9,10,11,12,1,2,3,4,5,6,7,8,9,10,11,1,2,3,4,5,6,7,8,9,10,1,2,3,4,5,6,7,8,9,1,2,3,4,5,6,7,8]
    # rmses_load = [4462.0407701376025,4505.49299498849,4522.898887326592,4530.764299968341,4534.510529610187,4370.020018545228,4064.1934647610897,4116.825655037908,4097.300629267554,4106.421805465537,4104.937454212935,4106.059839418104,4103.443277245756,4104.670985035299,4104.306017542857,4614.5048796226465,4583.928290634748,4583.928290634748,4566.974184038767,3862.826728207252,1952.9540219706405,2335.8085642393135,2175.322108430216,2246.4769993832315,2231.589100787337,2240.0336319763755,2218.1150541574866,2227.845057502194,2225.031756518102,4614.5048796226465,4574.246806389529,3436.0869670511247,1068.5064666201642,383.7804383194189,334.0108625397745,311.3279887172794,305.6032580264941,308.79375477712153,303.0364204820855,304.7812818447404,304.0004402571066,304.18015550183435,2501.8623841573503,727.2406599606354,376.46503999971304,318.70541875880974,296.5073605115401,291.89526492065875,286.69384834110656,286.195132672233,285.2894660590908,285.69775054061904,285.60329935634815,285.6424277689706,2505.274341042553,657.1056252647276,374.79254286831457,317.9569330282865,296.4662566629879,292.4334208797152,286.5358440784136,286.2942824939339,285.2628207268234,285.6731080936583,285.6118433651609,2504.9134541274016,656.9693807473682,374.96046276155585,318.0261177710438,296.5078086187166,292.4185003738446,286.5403518258472,286.2933961453373,285.2621927151255,285.6726261850461,2504.9134541274016,656.9693807473682,374.96046276155585,318.0261177710438,296.5078086187166,292.4185003738446,286.5403518258472,286.2933961453373,285.2621927151255,2504.9134541274016,656.9693807473682,374.96046276155585,318.0261177710438,296.5078086187166,292.4185003738446,286.5403518258472,286.2933961453373]
    # deltas_load = [0.0,0.0,0.0,0.0,0.0,1.1355378181940259e-07,1.1582485769373984e-05,5.0626060891942e-05,6.0524165551108783e-05,6.360904401495899e-05,6.487706098617542e-05,6.059986751181917e-05,6.306020111688393e-05,6.266276282499454e-05,6.260598579924696e-05,0.0,0.0,0.0,0.0,0.01010325846759188,0.13355272236624968,0.06794615451197779,0.07658706750957008,0.06980784971267175,0.07279026396619703,0.0710219668026237,0.07370711640622672,0.07258938747639171,0.07277877644567388,0.0,0.0,0.06252231485078737,0.41188664974233263,0.9515304054285205,0.9483967944113321,0.9562938358894614,0.9537590486538965,0.9547560336284859,0.9532228100958259,0.9539074272263882,0.953911439277405,0.9539303073529587,0.041520599599015294,0.8504284955994335,0.9788913216528504,0.981152934390445,0.9821567304085853,0.982346402437881,0.9823964988422949,0.9824458374533542,0.9824554522543453,0.9824473150940829,0.9824483167639998,0.9824477676735368,0.05522152579384098,0.8908395240906366,0.9789386739911035,0.9811412942444169,0.982149312142716,0.9823430527954601,0.9823958949987278,0.982446841722311,0.9824550168285536,0.9824464244897976,0.982448299003895,0.055000133825964186,0.8910281571537949,0.9789083354868168,0.9811379252824672,0.9821380142035873,0.9823402716496656,0.9823948724498582,0.9824467659169851,0.9824548084722009,0.982446103075216,0.055000133825964186,0.8910281571537949,0.9789083354868168,0.9811379252824672,0.9821380142035873,0.9823402716496656,0.9823948724498582,0.9824467659169851,0.9824548084722009,0.055000133825964186,0.8910281571537949,0.9789083354868168,0.9811379252824672,0.9821380142035873,0.9823402716496656,0.9823948724498582,0.9824467659169851]
    
    c = np.abs((np.random.random((84))-0.5)*15)
    # For plot 3D data graph
    
    fig1 = plt.figure(1)
    fig2 = plt.figure(2)
    ax1 = fig1.add_subplot(111, projection='3d')
    ax2 = fig2.add_subplot(111, projection='3d')
    fontlabel = {"fontsize":"large", "color":"black", "fontweight":"bold"}
    xlabel = "integer" 
    ylabel = "fraction"
    ax1.set_xlabel(xlabel, fontdict=fontlabel, labelpad=16)
    ax1.set_ylabel(ylabel, fontdict=fontlabel, labelpad=16)
    ax1.set_title("RMSE", fontdict=fontlabel)
    ax2.set_xlabel(xlabel, fontdict=fontlabel, labelpad=16)
    ax2.set_ylabel(ylabel, fontdict=fontlabel, labelpad=16)
    ax2.set_title("Delta1", fontdict=fontlabel)

    cmaps = plt.get_cmap("plasma")

    ax1.plot_trisurf(exps_load, mants_load, rmses_load, cmap=cmaps, alpha=0.8)
    ax2.plot_trisurf(exps_load, mants_load, deltas_load, cmap=cmaps, alpha=0.8)
    #ax1.set_zscale('log')
    #ax2.set_zscale('log')
    norm1 = mpl.colors.Normalize(vmin=0, vmax=5000)
    norm2 = mpl.colors.Normalize(vmin=0, vmax=1)
    fig1.colorbar(mpl.cm.ScalarMappable(norm=norm1, cmap=cmaps))
    fig2.colorbar(mpl.cm.ScalarMappable(norm=norm2, cmap=cmaps))
    plt.show()

if __name__ == '__main__':
    main()